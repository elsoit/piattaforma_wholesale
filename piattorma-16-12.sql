-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.brands
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    logo character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT brands_pkey PRIMARY KEY (id),
    CONSTRAINT brands_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.cataloghi
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    codice character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tipo tipo_catalogo NOT NULL,
    brand_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_inizio_ordini timestamp without time zone,
    data_fine_ordini timestamp without time zone,
    stagione stagione_catalogo NOT NULL,
    anno integer NOT NULL,
    data_consegna character varying(255) COLLATE pg_catalog."default",
    stato stato_catalogo NOT NULL DEFAULT 'bozza'::stato_catalogo,
    note text COLLATE pg_catalog."default",
    condizioni text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    cover_url character varying(255) COLLATE pg_catalog."default",
    nome character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT cataloghi_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.catalogo_files
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    catalogo_id integer NOT NULL,
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    file_url character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT catalogo_files_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.client_brand_interests
(
    id serial NOT NULL,
    client_id integer NOT NULL,
    brand_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT client_brand_interests_pkey PRIMARY KEY (id),
    CONSTRAINT client_brand_interests_client_id_brand_id_key UNIQUE (client_id, brand_id)
);

CREATE TABLE IF NOT EXISTS public.client_brands
(
    client_id integer NOT NULL,
    brand_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT client_brands_pkey PRIMARY KEY (client_id, brand_id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    id serial NOT NULL,
    company_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    vat_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    business character varying(255) COLLATE pg_catalog."default" NOT NULL,
    country character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default" NOT NULL,
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    company_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    company_phone character varying(50) COLLATE pg_catalog."default",
    pec character varying(255) COLLATE pg_catalog."default",
    sdi character varying(7) COLLATE pg_catalog."default",
    user_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    codice character varying(10) COLLATE pg_catalog."default",
    stato client_status NOT NULL DEFAULT 'in_attesa_di_attivazione'::client_status,
    province character varying(50) COLLATE pg_catalog."default",
    privacy_accepted boolean NOT NULL DEFAULT false,
    newsletter_subscribed boolean NOT NULL DEFAULT false,
    region character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT clients_pkey PRIMARY KEY (id),
    CONSTRAINT clients_codice_key UNIQUE (codice)
);

CREATE TABLE IF NOT EXISTS public.email_verifications
(
    id serial NOT NULL,
    user_id integer,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(64) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    verified_at timestamp without time zone,
    expires_at timestamp without time zone NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    ip_address character varying(45) COLLATE pg_catalog."default",
    user_agent text COLLATE pg_catalog."default",
    CONSTRAINT email_verifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    type notification_type NOT NULL,
    icon character varying(50) COLLATE pg_catalog."default" NOT NULL,
    color character varying(50) COLLATE pg_catalog."default" NOT NULL,
    brand_id character varying(255) COLLATE pg_catalog."default",
    brand_name character varying(255) COLLATE pg_catalog."default",
    message text COLLATE pg_catalog."default" NOT NULL,
    read boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    read_at timestamp with time zone,
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_products
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL DEFAULT 1,
    price numeric(10, 2) NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT order_products_pkey PRIMARY KEY (id),
    CONSTRAINT order_products_order_id_product_id_key UNIQUE (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id serial NOT NULL,
    order_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    client_id integer NOT NULL,
    subtotal numeric(10, 2) NOT NULL DEFAULT 0.00,
    vat numeric(10, 2) NOT NULL DEFAULT 0.00,
    discount numeric(10, 2) NOT NULL DEFAULT 0.00,
    shipping numeric(10, 2) NOT NULL DEFAULT 0.00,
    total numeric(10, 2) NOT NULL DEFAULT 0.00,
    status order_status NOT NULL DEFAULT 'bozza'::order_status,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    order_type order_type NOT NULL DEFAULT 'available'::order_type,
    catalog_id integer,
    CONSTRAINT orders_pkey PRIMARY KEY (id),
    CONSTRAINT orders_order_number_key UNIQUE (order_number)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id serial NOT NULL,
    article_code character varying(50) COLLATE pg_catalog."default" NOT NULL,
    variant_code character varying(50) COLLATE pg_catalog."default" NOT NULL,
    size_id integer,
    size_group_id integer,
    brand_id character varying(50) COLLATE pg_catalog."default",
    wholesale_price numeric(10, 2) NOT NULL,
    retail_price numeric(10, 2),
    status product_status NOT NULL DEFAULT 'active'::product_status,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT products_pkey PRIMARY KEY (id),
    CONSTRAINT products_article_code_variant_code_size_id_brand_id_key UNIQUE (article_code, variant_code, size_id, brand_id)
);

CREATE TABLE IF NOT EXISTS public.size_group_sizes
(
    id serial NOT NULL,
    size_id integer,
    size_group_id integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT size_group_sizes_pkey PRIMARY KEY (id),
    CONSTRAINT size_group_sizes_size_group_id_size_id_key UNIQUE (size_group_id, size_id)
);

CREATE TABLE IF NOT EXISTS public.size_groups
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT size_groups_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sizes
(
    id serial NOT NULL,
    name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT sizes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cognome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default",
    ruolo character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'user'::character varying,
    attivo boolean NOT NULL DEFAULT true,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    verification_token character varying(64) COLLATE pg_catalog."default",
    email_verified boolean DEFAULT false,
    email_verified_at timestamp without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.cataloghi
    ADD CONSTRAINT cataloghi_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_cataloghi_brand_id
    ON public.cataloghi(brand_id);


ALTER TABLE IF EXISTS public.catalogo_files
    ADD CONSTRAINT catalogo_files_catalogo_id_fkey FOREIGN KEY (catalogo_id)
    REFERENCES public.cataloghi (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_catalogo_files_catalogo_id
    ON public.catalogo_files(catalogo_id);


ALTER TABLE IF EXISTS public.client_brand_interests
    ADD CONSTRAINT client_brand_interests_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_client_brand_interests_brand_id
    ON public.client_brand_interests(brand_id);


ALTER TABLE IF EXISTS public.client_brand_interests
    ADD CONSTRAINT client_brand_interests_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_client_brand_interests_client_id
    ON public.client_brand_interests(client_id);


ALTER TABLE IF EXISTS public.client_brands
    ADD CONSTRAINT client_brands_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_client_brands_brand_id
    ON public.client_brands(brand_id);


ALTER TABLE IF EXISTS public.client_brands
    ADD CONSTRAINT client_brands_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_client_brands_client_id
    ON public.client_brands(client_id);


ALTER TABLE IF EXISTS public.clients
    ADD CONSTRAINT clients_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_clients_user_id
    ON public.clients(user_id);


ALTER TABLE IF EXISTS public.email_verifications
    ADD CONSTRAINT email_verifications_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT notifications_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_notifications_user_id
    ON public.notifications(user_id);


ALTER TABLE IF EXISTS public.order_products
    ADD CONSTRAINT order_products_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_order_products_order_id
    ON public.order_products(order_id);


ALTER TABLE IF EXISTS public.order_products
    ADD CONSTRAINT order_products_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS idx_order_products_product_id
    ON public.order_products(product_id);


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_catalog_id_fkey FOREIGN KEY (catalog_id)
    REFERENCES public.cataloghi (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS idx_orders_catalog_id
    ON public.orders(catalog_id);


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS idx_orders_client_id
    ON public.orders(client_id);


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_products_brand_id
    ON public.products(brand_id);


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_size_group_id_fkey FOREIGN KEY (size_group_id)
    REFERENCES public.size_groups (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_size_id_fkey FOREIGN KEY (size_id)
    REFERENCES public.sizes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.size_group_sizes
    ADD CONSTRAINT size_group_sizes_size_group_id_fkey FOREIGN KEY (size_group_id)
    REFERENCES public.size_groups (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.size_group_sizes
    ADD CONSTRAINT size_group_sizes_size_id_fkey FOREIGN KEY (size_id)
    REFERENCES public.sizes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;